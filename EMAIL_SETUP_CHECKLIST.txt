╔══════════════════════════════════════════════════════════════════════╗
║                                                                      ║
║  📧 EMAIL SERVICE SETUP CHECKLIST                                    ║
║  Wedding Bazaar - Vendor Booking Notifications                      ║
║                                                                      ║
╚══════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────┐
│ ✅ COMPLETED (Already Done by AI)                                    │
└──────────────────────────────────────────────────────────────────────┘

  [✓] Email service implementation (emailService.cjs)
  [✓] Vendor notification template (beautiful HTML email)
  [✓] Booking integration (POST /api/bookings)
  [✓] Error handling (email failures don't break bookings)
  [✓] Fallback logging (dev mode)
  [✓] Test script (test-email-service.cjs)
  [✓] Documentation (8 comprehensive guides)

┌──────────────────────────────────────────────────────────────────────┐
│ ⏳ TODO: SETUP (You - 5 Minutes)                                     │
└──────────────────────────────────────────────────────────────────────┘

  STEP 1: Create Gmail App Password (3 minutes)
  
  [ ] Go to: https://myaccount.google.com/apppasswords
  [ ] Enable 2-Step Verification (if not already)
  [ ] Click "Select app" → Choose "Mail"
  [ ] Click "Select device" → Choose "Other"
  [ ] Type: "Wedding Bazaar Backend"
  [ ] Click "Generate"
  [ ] Copy password: abcd efgh ijkl mnop
  [ ] Remove spaces: abcdefghijklmnop ← USE THIS
  [ ] Save password somewhere safe

  STEP 2: Add to Render (2 minutes)
  
  [ ] Go to: https://dashboard.render.com
  [ ] Click your service: weddingbazaar-web
  [ ] Click "Environment" tab
  [ ] Click "Add Environment Variable"
      [ ] Key: EMAIL_USER
      [ ] Value: your-gmail@gmail.com
      [ ] Click "Add"
  [ ] Click "Add Environment Variable" again
      [ ] Key: EMAIL_PASS
      [ ] Value: abcdefghijklmnop (app password, no spaces!)
      [ ] Click "Add"
  [ ] Click "Save Changes" at bottom
  [ ] Wait for auto-redeploy (3-5 minutes)

  STEP 3: Verify Deployment (1 minute)
  
  [ ] Go to "Logs" tab in Render
  [ ] Look for: ✅ Email service configured with: your-gmail@gmail.com
  [ ] Should NOT see: ⚠️ Email service not configured
  [ ] Deployment complete!

┌──────────────────────────────────────────────────────────────────────┐
│ 🧪 TODO: TESTING (You - 5 Minutes)                                   │
└──────────────────────────────────────────────────────────────────────┘

  TEST 1: Create Booking via Frontend
  
  [ ] Go to: https://weddingbazaarph.web.app
  [ ] Login as couple/individual user
  [ ] Browse vendors or services
  [ ] Click "Request Booking" on any service
  [ ] Fill in booking form:
      [ ] Couple name
      [ ] Email
      [ ] Phone
      [ ] Event date
      [ ] Location
      [ ] Guest count
      [ ] Budget range
      [ ] Special requests
  [ ] Click "Submit Booking Request"
  [ ] Booking created successfully

  TEST 2: Check Render Logs
  
  [ ] Go to Render dashboard → Logs
  [ ] Search for: "notification to vendor"
  [ ] Should see:
      📧 Sending new booking notification to vendor: vendor@example.com
      ✅ Vendor notification sent successfully: <message-id>
  [ ] No errors in logs

  TEST 3: Verify Email Received
  
  [ ] Open vendor's email inbox
  [ ] Look for email from "Wedding Bazaar"
  [ ] Subject: 🎉 New Booking Request from {Your Name} - {Service}
  [ ] Email has beautiful HTML formatting
  [ ] Gradient header (pink to purple)
  [ ] All booking details present:
      [ ] Couple name
      [ ] Service type
      [ ] Event date
      [ ] Location
      [ ] Guest count
      [ ] Budget range
      [ ] Special requests
  [ ] "View Booking Details" button visible

  TEST 4: Test Email Links
  
  [ ] Click "View Booking Details" button
  [ ] Redirects to: https://weddingbazaarph.web.app/vendor/bookings
  [ ] Booking appears in vendor dashboard
  [ ] Booking details match email

  TEST 5: Create Second Booking (Reliability)
  
  [ ] Create another test booking
  [ ] Verify email sent again
  [ ] Confirm consistent behavior

┌──────────────────────────────────────────────────────────────────────┐
│ ✅ SUCCESS CRITERIA                                                   │
└──────────────────────────────────────────────────────────────────────┘

  Configuration:
  [ ] Gmail app password created (16 characters)
  [ ] EMAIL_USER in Render
  [ ] EMAIL_PASS in Render
  [ ] Render logs show "Email service configured"
  
  Testing:
  [ ] Test booking created
  [ ] Email sent successfully (logs confirm)
  [ ] Vendor received email
  [ ] Email formatting looks good
  [ ] Links work correctly
  [ ] Second test booking works

  Verification:
  [ ] No errors in Render logs
  [ ] Email delivered to inbox (not spam)
  [ ] HTML rendering correct
  [ ] All data accurate in email

┌──────────────────────────────────────────────────────────────────────┐
│ 🔍 TROUBLESHOOTING                                                    │
└──────────────────────────────────────────────────────────────────────┘

  Problem: "Invalid login: 535-5.7.8 Username and Password not accepted"
  Solution:
  [ ] Use APP PASSWORD, not regular Gmail password
  [ ] Remove ALL spaces from app password (16 chars total)
  [ ] Verify 2-Step Verification enabled on Gmail
  [ ] Try generating new app password

  Problem: "⚠️ Email service not configured" in logs
  Solution:
  [ ] Check variable names: EMAIL_USER and EMAIL_PASS (exact!)
  [ ] Verify no typos in values
  [ ] Make sure variables in correct Render service
  [ ] Redeploy backend manually if needed

  Problem: Email sent but vendor didn't receive
  Solution:
  [ ] Check spam/junk folder
  [ ] Add sender to contacts
  [ ] Wait 5 minutes (email can be delayed)
  [ ] Verify vendor email in database:
      SELECT vp.business_name, u.email
      FROM vendor_profiles vp
      JOIN users u ON vp.user_id = u.id
      WHERE vp.id = 'vendor-id';

  Problem: Email looks broken or plain
  Solution:
  [ ] Try different email client (Gmail web, Outlook)
  [ ] Check HTML emails not blocked in settings
  [ ] View in "Show original" mode
  [ ] Check Render logs for template errors

┌──────────────────────────────────────────────────────────────────────┐
│ 📚 DOCUMENTATION REFERENCES                                           │
└──────────────────────────────────────────────────────────────────────┘

  Quick Start:
  → RENDER_EMAIL_SETUP_QUICK.md

  Complete Guide:
  → EMAIL_SERVICE_SETUP_COMPLETE.md

  Visual Guide:
  → EMAIL_FLOW_VISUAL_GUIDE.md

  Summary:
  → EMAIL_INTEGRATION_SUMMARY.md

  Action Items:
  → ACTION_ITEMS_EMAIL_SETUP.md

  Session Summary:
  → SESSION_SUMMARY_EMAIL_INTEGRATION.md

┌──────────────────────────────────────────────────────────────────────┐
│ 🧪 TESTING UTILITIES                                                  │
└──────────────────────────────────────────────────────────────────────┘

  Local Test (requires .env file):
  
  $ echo EMAIL_USER=your-gmail@gmail.com >> .env
  $ echo EMAIL_PASS=your-app-password >> .env
  $ node test-email-service.cjs

  Expected Output:
  ✅ Email service configured with: your-gmail@gmail.com
  ✅ SMTP connection successful!
  📧 Sending email...
  ✅ Email sent successfully!

┌──────────────────────────────────────────────────────────────────────┐
│ 📊 QUICK REFERENCE                                                    │
└──────────────────────────────────────────────────────────────────────┘

  Environment Variables:
  ┌────────────────┬──────────────────────────────────────────────────┐
  │ EMAIL_USER     │ your-gmail@gmail.com                             │
  │ EMAIL_PASS     │ abcdefghijklmnop (16 chars, no spaces)           │
  └────────────────┴──────────────────────────────────────────────────┘

  Important URLs:
  ┌────────────────┬──────────────────────────────────────────────────┐
  │ Gmail App PWD  │ https://myaccount.google.com/apppasswords        │
  │ Render Dash    │ https://dashboard.render.com                     │
  │ Frontend       │ https://weddingbazaarph.web.app                  │
  └────────────────┴──────────────────────────────────────────────────┘

  Key Files:
  ┌────────────────────────────────────────────────────────────────────┐
  │ Email Service: backend-deploy/utils/emailService.cjs              │
  │ Booking Routes: backend-deploy/routes/bookings.cjs                │
  │ Test Script: test-email-service.cjs                               │
  └────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────┐
│ ⏱️ TIME ESTIMATES                                                     │
└──────────────────────────────────────────────────────────────────────┘

  Setup:
  • Create Gmail app password: 3 minutes
  • Add to Render: 2 minutes
  • Wait for redeploy: 3-5 minutes
  • Verify logs: 1 minute
  ────────────────────────────────────
  Total Setup: ~10 minutes

  Testing:
  • Create test booking: 2 minutes
  • Check logs: 1 minute
  • Verify email received: 1 minute
  • Test links: 1 minute
  ────────────────────────────────────
  Total Testing: ~5 minutes

  TOTAL TIME: ~15 minutes

┌──────────────────────────────────────────────────────────────────────┐
│ 🎯 NEXT STEP                                                          │
└──────────────────────────────────────────────────────────────────────┘

  👉 Go to: https://myaccount.google.com/apppasswords
  
  Create your Gmail app password now! It only takes 3 minutes.

╔══════════════════════════════════════════════════════════════════════╗
║                                                                      ║
║  Status: ✅ READY FOR PRODUCTION                                     ║
║  Code Changes Needed: 0 lines                                        ║
║  Setup Time: 10 minutes                                              ║
║  Difficulty: ⭐ Easy                                                  ║
║                                                                      ║
║  Everything is ready! Just add environment variables and test.       ║
║                                                                      ║
╚══════════════════════════════════════════════════════════════════════╝
