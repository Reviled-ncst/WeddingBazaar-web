/**
 * Check booking IDs and how they're displayed
 */

const { neon } = require('@neondatabase/serverless');
require('dotenv').config({ path: './backend-deploy/.env' });

const sql = neon(process.env.DATABASE_URL);

async function checkBookingIDs() {
  try {
    console.log('üîç Checking booking IDs and reference numbers...\n');

    const bookings = await sql`
      SELECT 
        id,
        service_name,
        status,
        created_at
      FROM bookings 
      ORDER BY id DESC
    `;

    console.log(`üìä Found ${bookings.length} booking(s)\n`);
    console.log('='.repeat(100));

    bookings.forEach((booking, index) => {
      const paddedId = String(booking.id).padStart(4, '0');
      const frontendRef = `WB${paddedId}`;
      
      console.log(`\n${index + 1}. DATABASE vs FRONTEND:`);
      console.log(`   Database ID:           ${booking.id}`);
      console.log(`   Frontend Reference:    ${frontendRef} (WB + padded ID)`);
      console.log(`   Service:               ${booking.service_name}`);
      console.log(`   Status:                ${booking.status}`);
      console.log(`   Created:               ${new Date(booking.created_at).toLocaleString()}`);
      console.log('   ---');
      console.log(`   Raw ID:                ${booking.id} (as stored in database)`);
      console.log(`   Padded to 4 digits:    ${paddedId}`);
      console.log(`   With "WB" prefix:      ${frontendRef}`);
    });

    console.log('\n' + '='.repeat(100));
    console.log('\nüí° EXPLANATION:');
    console.log('   The frontend shows "WB####" format (e.g., WB0001, WB1234)');
    console.log('   This is generated by: `WB${String(id).padStart(4, "0")}`');
    console.log('   The actual database ID is just a number (e.g., 1760666640)');
    console.log('\n   So booking ID 1760666640 displays as:');
    console.log('   ‚ûú WB1760666640 (with WB prefix)');
    console.log('\n‚ùì QUESTION:');
    console.log('   What ID mismatch are you seeing?');
    console.log('   - Between database and UI?');
    console.log('   - Between different parts of the UI?');
    console.log('   - Please describe what IDs you\'re seeing where!\n');

  } catch (error) {
    console.error('‚ùå Error:', error.message);
    console.error(error);
  }
}

checkBookingIDs();
