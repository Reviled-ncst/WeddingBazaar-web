name: Automated Tests

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint-and-build:
    name: Lint & Build Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Build frontend
        run: npm run build

      - name: Check bundle size
        run: |
          echo "📦 Build output size:"
          du -sh dist/
          echo "📊 Detailed breakdown:"
          du -h dist/ | sort -rh | head -20

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npx tsc --noEmit
        continue-on-error: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for vulnerable dependencies
        run: |
          echo "🔒 Checking for security vulnerabilities..."
          npm audit --json > audit-report.json || true
          if [ -f audit-report.json ]; then
            vulnerabilities=$(cat audit-report.json | jq '.metadata.vulnerabilities.total')
            echo "Found $vulnerabilities vulnerabilities"
          fi

  api-tests:
    name: API Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Test Backend Health
        run: |
          echo "🏥 Testing backend health..."
          response=$(curl -s https://weddingbazaar-web.onrender.com/api/health)
          echo "Response: $response"

      - name: Test API Endpoints
        run: |
          echo "🧪 Testing API endpoints..."
          
          # Test vendors endpoint
          vendors_response=$(curl -s https://weddingbazaar-web.onrender.com/api/vendors/featured)
          echo "Vendors API: $vendors_response"
          
          # Test categories endpoint
          categories_response=$(curl -s https://weddingbazaar-web.onrender.com/api/categories)
          echo "Categories API: $categories_response"
