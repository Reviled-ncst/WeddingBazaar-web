{
  "name": "wedding-bazaar",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --host",
    "dev:full": "concurrently \"npm run dev\" \"npm run dev:backend\"",
    "dev:backend": "nodemon --exec tsx server/index.ts",
    "build": "vite build",
    "build:prod": "vite build --mode production",
    "build:staging": "vite build --mode staging",
    "build:backend": "echo 'Backend ready for deployment'",
    "build:full": "npm run build",
    "build:verify": "npm run build:prod && npm run preview --silent",
    "start:backend": "tsx backend-deploy/index.ts",
    "start:prod": "NODE_ENV=production npm run start:backend",
    "lint": "eslint .",
    "preview": "vite preview",
    "start": "npm run dev:full",
    
    "db:init": "curl -X POST http://localhost:3000/api/admin/init-db",
    "db:init:prod": "curl -X POST $RAILWAY_STATIC_URL/api/admin/init-db",
    "db:setup": "node scripts/setup-database.js",
    "db:init:tables": "tsx scripts/init-database.ts",
    "db:seed": "tsx scripts/seed-database.ts",
    "db:reviews:generate": "node scripts/generate-reviews.cjs",
    "db:reviews:check": "node scripts/check-reviews-table.cjs",
    "db:reviews:sample": "node scripts/show-sample-reviews.cjs",
    
    "deploy:railway": "npm run build:full && railway up",
    "setup:env": "node scripts/setup-env.js",
    "setup:env:prod": "node scripts/setup-env.js --production",
    "setup:env:force": "node scripts/setup-env.js --force",
    
    "// HOSTING WORKFLOW SCRIPTS": "==== Safe Hosting Commands ====",
    
    "// Environment Management": "",
    "env:production": "cp .env.production .env",
    "env:staging": "cp .env.staging .env || cp .env.production .env",
    "env:development": "cp .env.development .env || cp .env.local .env",
    "env:check": "node scripts/check-environment.js",
    
    "// Health Checks": "",
    "health:backend": "curl -f https://weddingbazaar-web.onrender.com/api/health || exit 1",
    "health:frontend": "curl -f https://weddingbazaarph.web.app/ || exit 1", 
    "health:database": "node scripts/check-database-health.js",
    "health:api": "node scripts/test-api-endpoints.js",
    "health:routes": "node scripts/test-frontend-routes.js",
    "health:full": "npm run health:backend && npm run health:frontend && npm run health:database && npm run health:api",
    "health:wait:backend": "node scripts/wait-for-backend.js",
    
    "// Safe Deployment": "",
    "deploy:safe": "npm run pre:deploy && npm run deploy:backend:prod && npm run health:wait:backend && npm run deploy:frontend:prod && npm run post:deploy",
    "deploy:quick": "npm run build:prod && firebase deploy --only hosting",
    "deploy:backend:prod": "echo 'Backend deployed via Render dashboard or git push'",
    "deploy:backend:staging": "echo 'Deploy to staging branch'",
    "deploy:frontend:prod": "npm run build:prod && firebase deploy --only hosting",
    "deploy:frontend:staging": "npm run build:staging && firebase deploy --only hosting:staging",
    
    "// Pre/Post Deploy": "",
    "pre:deploy": "npm run env:check && npm run test:api && npm run build:verify",
    "post:deploy": "npm run health:full && npm run smoke:test && echo 'Deployment completed successfully!'",
    
    "// Testing": "",
    "test:api": "node scripts/test-api-health.js",
    "test:db": "node scripts/test-database-connection.js", 
    "test:prod:integration": "NODE_ENV=production node scripts/test-integration.js",
    "test:staging": "node scripts/test-staging-environment.js",
    "smoke:test": "node scripts/smoke-test.js",
    "smoke:backend": "curl -f https://weddingbazaar-web.onrender.com/api/health && curl -f https://weddingbazaar-web.onrender.com/api/vendors/featured",
    
    "// Monitoring": "",
    "monitor:deploy": "node scripts/monitor-deployment.js",
    "logs:backend": "echo 'Check Render dashboard for logs'",
    "logs:frontend": "firebase functions:log",
    "logs:all": "npm run logs:backend && npm run logs:frontend",
    "perf:check": "node scripts/performance-check.js",
    
    "// Emergency Procedures": "",
    "emergency:stop": "echo 'Contact hosting providers to stop services'",
    "rollback:frontend": "firebase hosting:clone weddingbazaarph:live weddingbazaarph:previous",
    "rollback:backend": "echo 'Rollback via Render dashboard to previous deployment'",
    "rollback:all": "npm run rollback:frontend && npm run rollback:backend",
    "hotfix:deploy": "npm run build:prod && firebase deploy --only hosting --message 'HOTFIX'",
    
    "// Status Monitoring": "",
    "status:full": "npm run health:full && npm run perf:check",
    "wait:backend": "node scripts/wait-for-service.js https://weddingbazaar-web.onrender.com/api/health",
    
    "// Development Tools": "",
    "dev:production": "npm run env:production && npm run dev",
    "dev:staging": "npm run env:staging && npm run dev",
    "build:analyze": "npm run build:prod && npx vite-bundle-analyzer dist/stats.html"
  },
  "dependencies": {
    "@headlessui/react": "^2.1.8",
    "@heroicons/react": "^2.1.5",
    "@hookform/resolvers": "^3.9.0",
    "@neondatabase/serverless": "^0.9.5",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/morgan": "^1.9.9",
    "bcryptjs": "^2.4.3",
    "clsx": "^2.1.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.21.1",
    "framer-motion": "^11.11.1",
    "helmet": "^8.0.0",
    "leaflet": "^1.9.4",
    "morgan": "^1.10.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.53.0",
    "react-leaflet": "^4.2.1",
    "react-router-dom": "^6.26.2",
    "tailwind-merge": "^2.5.2",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@eslint/js": "^9.11.1",
    "@types/leaflet": "^1.9.12",
    "@types/node": "^22.7.4",
    "@types/react": "^18.3.10",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.3.2",
    "autoprefixer": "^10.4.20",
    "concurrently": "^9.0.1",
    "eslint": "^9.11.1",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.12",
    "globals": "^15.9.0",
    "nodemon": "^3.1.7",
    "postcss": "^8.4.47",
    "tailwindcss": "^3.4.13",
    "tsx": "^4.19.1",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.7.0",
    "vite": "^5.4.8"
  }
}
